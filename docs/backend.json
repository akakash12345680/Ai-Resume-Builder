{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the ResumeAI application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user entity."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the user account was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp indicating when the user account was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "email",
        "createdAt",
        "updatedAt"
      ]
    },
    "Resume": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Resume",
      "type": "object",
      "description": "Represents a resume generated or edited by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the resume entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Resume)"
        },
        "template": {
          "type": "string",
          "description": "The name of the template used for the resume (e.g., Classic, Modern)."
        },
        "resumeData": {
          "type": "string",
          "description": "The resume data in JSON format."
        },
        "atsScore": {
          "type": "number",
          "description": "The ATS score of the resume (out of 100)."
        },
        "createdAt": {
          "type": "string",
          "description": "Timestamp indicating when the resume was created.",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "description": "Timestamp indicating when the resume was last updated.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "userId",
        "template",
        "resumeData",
        "atsScore",
        "createdAt",
        "updatedAt"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information. Path-based ownership ensures only the authenticated user can access their own data.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/resumes/{resumeId}",
        "definition": {
          "entityName": "Resume",
          "schema": {
            "$ref": "#/backend/entities/Resume"
          },
          "description": "Stores resumes created by a specific user. Path-based ownership ensures only the user can access their resumes.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            },
            {
              "name": "resumeId",
              "description": "The unique identifier for the resume."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure Authorization Independence, support required QAPs, and maintain data integrity.  Authorization Independence is achieved by leveraging path-based ownership for user-specific data, which removes the need for `get()` calls in security rules. QAPs are supported by segregating data based on ownership, as each user has their own collection of resumes, allowing secure list operations."
  }
}